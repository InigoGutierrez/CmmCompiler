#source "/home/taamas/IIS/4/DLP/labs/gitRepo/CmmCompiler/inputs/lab12/input1.txt"
' * [10,double] v (offset 0)
call main
halt
 main:
    ' * Parameters
    ' * Local variables
    ' * double value (offset -4)
    ' * int i (offset -6)
    ' * int j (offset -8)
    ' * [4,[5,int]] w (offset -48)
    ' * Record[RecordField int day; , RecordField int month; , RecordField int year; ] date (offset -54)
    enter 54
    ' * Read
    push bp
    pushi -54
    addi
    pushi 0
    addi
    ini
    storei
    push bp
    pushi -54
    addi
    pushi 4
    addi
    pushb 97
    b2i
    storei
    push bp
    pushi -54
    addi
    pushi 2
    addi
    push bp
    pushi -54
    addi
    pushi 0
    addi
    loadi
    push bp
    pushi -54
    addi
    pushi 4
    addi
    loadi
    muli
    pushi 12
    modi
    pushi 1
    addi
    storei
    ' * Write
    push bp
    pushi -54
    addi
    pushi 0
    addi
    loadi
    outi
    ' * Write
    pushb 10
    outb
    ' * Write
    push bp
    pushi -54
    addi
    pushi 2
    addi
    loadi
    outi
    ' * Write
    pushb 10
    outb
    ' * Write
    push bp
    pushi -54
    addi
    pushi 4
    addi
    loadi
    i2f
    outf
    ' * Write
    pushb 10
    outb
    ' * Read
    push bp
    pushi -4
    addi
    inf
    storef
    push bp
    pushi -6
    addi
    pushi 0
    storei
    ' * While
    label0:
    ' * Condition
    push bp
    pushi -6
    addi
    loadi
    pushi 10
    lti
    jz label1
    ' * While body
    pusha 0
    push bp
    pushi -6
    addi
    loadi
    pushi 4
    muli
    addi
    push bp
    pushi -4
    addi
    loadf
    storef
    ' * Write
    push bp
    pushi -6
    addi
    loadi
    outi
    ' * Write
    pushb 58
    outb
    ' * Write
    pusha 0
    push bp
    pushi -6
    addi
    loadi
    pushi 4
    muli
    addi
    loadf
    outf
    ' * Write
    pushb 32
    outb
    ' * If
    ' * Condition
    push bp
    pushi -6
    addi
    loadi
    pushi 2
    modi
    jz label2
    ' * If branch body
    ' * Write
    pushb 111
    outb
    ' * Write
    pushb 100
    outb
    ' * Write
    pushb 100
    outb
    ' * Write
    pushb 10
    outb
    jmp label3
    label2:
    ' * Else branch body
    ' * Write
    pushb 101
    outb
    ' * Write
    pushb 118
    outb
    ' * Write
    pushb 101
    outb
    ' * Write
    pushb 110
    outb
    ' * Write
    pushb 10
    outb
    label3:
    push bp
    pushi -6
    addi
    push bp
    pushi -6
    addi
    loadi
    pushi 1
    addi
    storei
    jmp label0
    label1:
    ' * Write
    pushb 10
    outb
    push bp
    pushi -6
    addi
    pushi 0
    storei
    ' * While
    label4:
    ' * Condition
    push bp
    pushi -6
    addi
    loadi
    pushi 4
    lti
    jz label5
    ' * While body
    push bp
    pushi -8
    addi
    pushi 0
    storei
    ' * While
    label6:
    ' * Condition
    push bp
    pushi -8
    addi
    loadi
    pushi 5
    lti
    jz label7
    ' * While body
    push bp
    pushi -48
    addi
    push bp
    pushi -6
    addi
    loadi
    pushi 10
    muli
    addi
    push bp
    pushi -8
    addi
    loadi
    pushi 2
    muli
    addi
    push bp
    pushi -6
    addi
    loadi
    push bp
    pushi -8
    addi
    loadi
    addi
    storei
    ' * Write
    push bp
    pushi -48
    addi
    push bp
    pushi -6
    addi
    loadi
    pushi 10
    muli
    addi
    push bp
    pushi -8
    addi
    loadi
    pushi 2
    muli
    addi
    loadi
    outi
    ' * Write
    pushb 32
    outb
    push bp
    pushi -8
    addi
    push bp
    pushi -8
    addi
    loadi
    pushi 1
    addi
    storei
    jmp label6
    label7:
    ' * Write
    pushb 10
    outb
    push bp
    pushi -6
    addi
    push bp
    pushi -6
    addi
    loadi
    pushi 1
    addi
    storei
    jmp label4
    label5:
    ret 0, 54, 0
