@startuml

!include type.pu
!include astNode.pu

abstract AbstractType
abstract AbstractBuiltinType

class VoidType
class IntType
class RealType
class CharType
class ArrayType
class FunctionType
class RecordType
class RecordField
class VarDefinition
class ErrorType

abstract AbstractType {
{abstract}(Base behaviour for\neach interface method,\nthrowing errors)
}

abstract AbstractBuiltinType {
    isBuiltin(): boolean
    cast(Type castedTo, Expression cast): Type
}

class VarDefinition {
    String: name
    int: offset
}

class ArrayType {
    int: size
}

class RecordField {
    String: name
}

class RecordField {
    int: offset
}

class ErrorType {
    String: message
}

ASTNode <|-- Type
Type <|.. AbstractType
AbstractType <|-- AbstractBuiltinType

VoidType --|> AbstractType

AbstractBuiltinType <|-- IntType
AbstractBuiltinType <|-- RealType
AbstractBuiltinType <|-- CharType

AbstractType <|-- ArrayType
Type "1" <-- ArrayType

AbstractType <|-- FunctionType
Type "1" <--o FunctionType : return
VarDefinition "0..*" <--o FunctionType : arguments
Type "1" <--o  VarDefinition

AbstractType <|-- RecordType
RecordType o--> "1..*" RecordField
ASTNode <|.. RecordField
RecordField --> "1" Type

AbstractType <|-- ErrorType

@enduml

